version: '3.1'
services:
  frontend:
    build:
      context: frontend/.
      dockerfile: docker/Dockerfile
      args:
        BASE_URL: ${BASE_URL}
        VUE_APP_ROOT_API: ${VUE_APP_ROOT_API}
    restart: always
    expose:
      - "80"
    networks:
      - web
  spring:
    build:
      context: backend/.
      dockerfile: Dockerfile
    ports:
      - '8091:8080'
    environment:
      # ------------ [ Credentials ] ------------ #
      # Login credentials.
      # These settings will set up the first
      # user for the backend application
      #------------------------------------------ #
      - INITIAL_USERNAME=${INITIAL_USERNAME}
      - INITIAL_PASSWORD=${INITIAL_PASSWORD}
      # ------------- [ Mongo DB ] ------------- #
      # Github credentials.
      # This user must be added to the project
      # with at least read permissions
      #----------------------------------------- #
      - DB_HOST=${MONGO_HOST}
      - DB_USER=${MONGO_USER}
      - DB_PASSWORD=${MONGO_PASSWORD}
      #
      # -------------- [ Backend ] -------------- #
      # These are settings for the backend server
      # ----------------------------------------- #
      - PROJECT_ENV=${PROJECT_ENV}
      - HOST_OS=${HOST_OS}
      - CORS_ENABLED=${CORS_ENABLED}
      # ------------- [ Frontend ] ------------- #
      # Frontend Server URL
      # --------------------------------------- #
      - SERVER_URL=${SERVER_URL}
      #
      # -------------- [ Paths ] -------------- #
      # These settings are used to change
      # path locations.
      #---------------------------------------- #
      - 'PROJECT_HOST_DIR=${PROJECT_HOST_DIR}'
      - PROJECT_DIR=${PROJECT_DIR}
      - MODEL_DIR=${MODEL_DIR}
      - PROJECT_CONTAINER_PREFIX=${PROJECT_CONTAINER_PREFIX}
      #
      # ------------ [ Networks ] ------------ #
      # These settings are used to set up the
      # docker internal networks.
      # This network must also be added to the
      # 'networks' settings.
      #--------------------------------------- #
      - INTERNAL_NETWORK_NAME=${INTERNAL_NETWORK_NAME}
      #
      # ---------------- [ Git ] ---------------- #
      # Github credentials.
      # This user must be added to the project
      # with at least read permissions
      #------------------------------------------ #
      - GIT_USERNAME=${GIT_USERNAME}
      - GIT_PASSWORD=${GIT_PASSWORD}
      #
      - CONTAINER_MANAGER_HOST=manager
      - CONTAINER_MANAGER_PORT=80
    volumes:
      - '${PROJECT_HOST_DIR}:${PROJECT_DIR}'
      - '${MODEL_HOST_DIR}:${MODEL_DIR}'
    networks:
      - ${INTERNAL_NETWORK_NAME}
      - default
      - web
  mongo:
    image: 'mongo:4.4'
    restart: always
    expose:
      - '27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - db:/data/db
    command: mongod --quiet --logpath /dev/null
  # mongo-express:
  #   image: mongo-express:0.54.0
  #   restart: always
  #   ports:
  #     - '8081:8081'
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
  manager:
    build:
      context: container-manager/.
      dockerfile: Dockerfile
    expose:
      - 80
    volumes:
      - './container-manager/src:/app'
      - '//var/run/docker.sock:/var/run/docker.sock'
      - '${PROJECT_HOST_DIR}:${PROJECT_DIR}'
  triton:
    image: 'nvcr.io/nvidia/tritonserver:21.04-py3'
    expose:
      - 8000
      - 8001
      - 8002
    volumes:
      - '${MODEL_HOST_DIR}:${MODEL_DIR}'
    command: tritonserver --model-repository=${MODEL_DIR} --model-control-mode=explicit
    networks:
      - ${INTERNAL_NETWORK_NAME}
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            count: 2
            capabilities: [gpu]
volumes:
  project_volume:
    driver: local
    driver_opts:
      type: none
      device: '${PROJECT_HOST_DIR}'
      o: bind
  db:
networks:
  dl_project_network:
    external: true
  web:
    external: true
